import React from 'react';
import { ViewStyle, NativeSyntheticEvent } from 'react-native';
import { RiveRef, LoopMode, RNRiveError } from './types';
import { XOR } from './helpers';
import { Alignment, Fit } from './types';
declare type RiveProps = {
    onPlay?: (event: NativeSyntheticEvent<{
        animationName: string;
        isStateMachine: boolean;
    }>) => void;
    onPause?: (event: NativeSyntheticEvent<{
        animationName: string;
        isStateMachine: boolean;
    }>) => void;
    onStop?: (event: NativeSyntheticEvent<{
        animationName: string;
        isStateMachine: boolean;
    }>) => void;
    onLoopEnd?: (event: NativeSyntheticEvent<{
        animationName: string;
        loopMode: LoopMode;
    }>) => void;
    onStateChanged?: (event: NativeSyntheticEvent<{
        stateMachineName: string;
        stateName: string;
    }>) => void;
    onError?: (event: NativeSyntheticEvent<{
        type: string;
        message: string;
    }>) => void;
    isUserHandlingErrors: boolean;
    autoplay?: boolean;
    fit: Fit;
    alignment: Alignment;
    artboardName?: string;
    animationName?: string;
    stateMachineName?: string;
    ref: any;
    resourceName?: string;
    url?: string;
    style?: ViewStyle;
    testID?: string;
};
declare type Props = {
    onPlay?: (animationName: string, isStateMachine: boolean) => void;
    onPause?: (animationName: string, isStateMachine: boolean) => void;
    onStop?: (animationName: string, isStateMachine: boolean) => void;
    onLoopEnd?: (animationName: string, loopMode: LoopMode) => void;
    onStateChanged?: (stateMachineName: string, stateName: string) => void;
    onError?: (rnRiveError: RNRiveError) => void;
    fit?: Fit;
    style?: ViewStyle;
    testID?: string;
    alignment?: Alignment;
    artboardName?: string;
    animationName?: string;
    stateMachineName?: string;
    autoplay?: boolean;
} & XOR<{
    resourceName: string;
}, {
    url: string;
}>;
export declare const RiveViewManager: import("react-native").HostComponent<RiveProps>;
declare const RiveContainer: React.ForwardRefExoticComponent<Props & React.RefAttributes<RiveRef>>;
export default RiveContainer;
