{"version":3,"sources":["types.ts"],"names":["Fit","Alignment","LoopMode","Direction","RNRiveErrorType"],"mappings":"AAwBA,WAAYA,GAAZ;;WAAYA,G;AAAAA,EAAAA,G;AAAAA,EAAAA,G;AAAAA,EAAAA,G;AAAAA,EAAAA,G;AAAAA,EAAAA,G;AAAAA,EAAAA,G;AAAAA,EAAAA,G;GAAAA,G,KAAAA,G;;AAUZ,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S;;AAYZ,WAAYC,QAAZ;;WAAYA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;GAAAA,Q,KAAAA,Q;;AAOZ,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S;;AAMZ,WAAYC,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e","sourcesContent":["export type RiveRef = {\n  fireState: (stateMachineName: string, inputName: string) => void;\n  setInputState: (\n    stateMachineName: string,\n    inputName: string,\n    value: boolean | number\n  ) => void;\n  play: (\n    animationNames?: string | string[],\n    loop?: LoopMode,\n    direction?: Direction,\n    areStateMachines?: boolean\n  ) => void;\n  pause: (\n    animationNames?: string | string[],\n    areStateMachines?: boolean\n  ) => void;\n  stop: (\n    animationNames?: string | string[],\n    areStateMachines?: boolean\n  ) => void;\n  reset: () => void;\n};\n\nexport enum Fit {\n  Cover = 'cover',\n  Contain = 'contain',\n  Fill = 'fill',\n  FitWidth = 'fitWidth',\n  FitHeight = 'fitHeight',\n  None = 'none',\n  ScaleDown = 'scaleDown',\n}\n\nexport enum Alignment {\n  TopLeft = 'topLeft',\n  TopCenter = 'topCenter',\n  TopRight = 'topRight',\n  CenterLeft = 'centerLeft',\n  Center = 'center',\n  CenterRight = 'centerRight',\n  BottomLeft = 'bottomLeft',\n  BottomCenter = 'bottomCenter',\n  BottomRight = 'bottomRight',\n}\n\nexport enum LoopMode {\n  OneShot = 'oneShot',\n  Loop = 'loop',\n  PingPong = 'pingPong',\n  Auto = 'auto',\n}\n\nexport enum Direction {\n  Backwards = 'backwards',\n  Auto = 'auto',\n  Forwards = 'forwards',\n}\n\nexport enum RNRiveErrorType {\n  FileNotFound = 'FileNotFound',\n  UnsupportedRuntimeVersion = 'UnsupportedRuntimeVersion',\n  IncorrectRiveFileUrl = 'IncorrectRiveFileUrl',\n  IncorrectAnimationName = 'IncorrectAnimationName',\n  MalformedFile = 'MalformedFile',\n  IncorrectArtboardName = 'IncorrectArtboardName',\n  IncorrectStateMachineName = 'IncorrectStateMachineName',\n  IncorrectStateMachineInput = 'IncorrectStateMachineInput',\n}\n\nexport type RNRiveError = {\n  message: string;\n  type: RNRiveErrorType;\n};\n"]}